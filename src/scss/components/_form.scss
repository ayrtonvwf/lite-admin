form {
    counter-reset: invalid-fields valid-fields;
}

.input {
    display: flex;
    flex-direction: column;
    &>label {
        order: -1;
    }
    &>input, &>select, &>textarea {
        form.mark-required &:required+label::after {
            content: " *";
            color: red;
            font-size: .9em;
            font-weight: bold;
        }
    }
}

label {
    padding: 3px 0px;
    display: inline-block;
    font-weight: bold;
    color: $black;
}

input:not([type='checkbox']):not([type='radio']), select, textarea {
    width: 100%;
    padding: 8px;
    line-height: 17px;
    margin-bottom: 5px;
    border: 1px solid lightgray;
    border-bottom-width: 2px;
    outline: none;
    background: white;
    transition: border-bottom-color .5s, color .5s;
    &:focus {
        border-bottom-color: $blue;
        &:invalid {
            border-bottom-color: $red;
        }
    }
    &:invalid {
        box-shadow: none; // remove firefox style
    }
}

input:not([type='checkbox']):not([type='radio']), select {
    height: 36px;
}

input[type='checkbox'], input[type='radio'] {
    position: relative;
    display: inline-block;
    appearance: none;
    width: 20px;
    height: 20px;
    background-color: white;
    border: 1px solid blue;
    outline: none;
    margin: 5px 5px -5px 0px;
    &::before, &::after {
        content: "";
        display: block;
        position: absolute;
        background-color: blue;
        opacity: 0;
        transition: opacity .1s;
    }
    &:checked {
        &::before, &::after {
            opacity: 1;
        }
    }
    label:hover>&, label:focus>&, &:hover, &:focus {
        border-width: 2px;
    }
}
input[type='checkbox'] {
    position: relative;
    &::before {
        width: 5px;
        height: 2px;
        transform: rotateZ(50deg);
        left: 4px;
        top: 10px;
    }
    &::after {
        width: 12px;
        height: 2px;
        transform: rotateZ(-55deg);
        left: 5px;
        top: 8px;
    }
    label:hover>&, label:focus>&, &:hover, &:focus {
        &::before {
            left: 3px;
            top: 9px;
        }
        &::after {
            left: 4px;
            top: 7px;
        }
    }
}

input[type='radio'] {
    border-radius: 10px;
    &::before {
        height: 10px;
        width: 10px;
        border-radius: 5px;
        margin: 4px;
    }
    label:hover>&, label:focus>&, &:hover, &:focus {
        &::before {
            margin: 3px;
        }
    }
}

.btn-success, .btn-info, .btn-primary, .btn-warning, .btn-danger {
    &>input[type='file'] {
        padding: 0px;
        height: auto;
        border: 0px;
        margin: 2px 0px 0px -3px;
        background-color: transparent;
        pointer-events: none;
        font-family: arial, sans-serif;
        font-size: 13px;
        &::-webkit-file-upload-button {
            width: 0px;
            height: 0px;
            padding: 0px;
            border: none;
        }
    }
}
.hidden {
    display: none;
}
select {
    appearance: none;
    background-image: url("data:image/svg+xml;utf8,<svg fill='gray' height='7' viewBox='0 0 10 7' width='10' xmlns='http://www.w3.org/2000/svg'><path d='M0 0 H10 L5 7 Z'/></svg>");
    background-repeat: no-repeat;
    background-position: calc(100% - 10px) center;
}

.resize-h {
    resize: horizontal;
}
.resize-v {
    resize: vertical;
}
.no-resize {
    resize: none;
}
.resize-both {
    resize: both;
}

#form-valid-support-helper {
    display: none;
}
.form-valid, .form-invalid {
    display: none;
}
form:valid .form-valid, form:invalid .form-invalid {
    display: initial;
}

.form-valid-supported {
    display: none;
    form:valid &, form:invalid &, form:valid ~ &, form:invalid ~ &, form:valid ~ * &, form:invalid ~ * & {
        display: initial;
    }
}
.form-valid-unsupported {
    display: initial;
    form:valid &, form:invalid &, form:valid ~ &, form:invalid ~ &, form:valid ~ * &, form:invalid ~ * & {
        display: none;
    }
}

input:invalid, select:invalid, textarea:invalid {
    counter-increment: invalid-fields;
}
input:valid, select:valid, textarea:valid {
    counter-increment: valid-fields;
}

.counter-invalid-fields::after {
    content: counter(invalid-fields);
}
.counter-valid-fields::after {
    content: counter(valid-fields);
}

fieldset {
    border: 1px solid gray;
    &>legend {
        padding: 5px;
        font-size: 16px;
        color: rgb(50, 50, 50);
    }
}